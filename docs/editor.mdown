Developer README file for EAD Editing Interface  - last updated 27 Feb 2009
==============================================================================

Contents

1 - Adding a new access point or editing options in current ones.

2 - Changing compulsory fields.

3 - Indexing Lock file



1. Adding a new access point or editing options in current ones.


Access Point information is stored in several places this is a list of things that need to be changed and where:


form.xsl		add/edit options for relevant access point in html (lines 1239 onwards) or add/delete access point following the model of the others

accespoints.js		edit labelmapping array which maps html name of the option to the Label to show up next to the box on the form. i.e. labelMapping['subject_dates'] = 'Dates';
			where "subject" is the accesspoint name and "dates" the emph tag value - note you should allow for word version "subject_dates" and abbreviated version "subject_y"

			add/remove name of accesspoint to list in resetAllAccessPoints()

			add name of required fields to addAccessPoint(s)

			if the access point does not have selectable options it will need to be added to the conditional statements where "genreform" and "function" are already there 


eadEditingHandler.py	add/remove accesspoint from list in _delete_currentControlaccess()

			change punctuation dictionaries and typedict array as appropriate. 


=================================================================================================================================================================================================


2. Changing compulsory fields.


Compulsory field information is stored in several places this is a list of things that need to be changed and where:


contents-editing.xsl 	the path from $node (archdesc or cxx) to the element needs to be specified in the lists for collection level around line 104 and/or component level around 114 (this enables the 				document to be verified when is is loaded or reloaded). 

editHandler.py 		the name of the element (which includes the path if not directly in archdesc or cxx) needs to be added to the required_xpaths list and/or the required_xpaths_components (this 				enables the document to be verified when it is saved)

form.js			the name of the element (which includes the path if not directly in archdesc or cxx) needs to be added to the required_xpaths list and/or the required_xpaths_components this 				controls the red outlining in the form. Note that this only works if browsers support css border property for the particular type of form element (currently IE 7 does not support 				this for SELECT elements)

			
=================================================================================================================================================================================================


3. Indexing Lock file

The editing interface as well as the admin interface and all build scripts use lock files to prevent two people from indexing/unindexing at the same time the lock file path for a database will be at the default path for the data base and be called indexing.lock 



